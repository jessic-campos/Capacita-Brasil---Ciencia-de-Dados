# -*- coding: utf-8 -*-
"""OFICINA 5

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16lZalaOz7L26h7ymTwJaVV9Z7af_-XT5

**Observação**

A questão pedia:
-  construção de um modelo de regressão linear simples
- construição de um modelo que use as outras variáveis do dataset para prever o preço de venda da casa.

Considerando esses pontos busquei construir um modelo de regressão linear simples, onde se estabelece-se uma relação linear entre uma variável independente (area_total) e uma variável dependente (preço_venda).
Sendo a variável area_total formada pela soma do primeiro e segundo andar, porém observei grande dispersão nos dados, as soluções que fui testando acabavam por sair do escopo de *regressão linear simples* e acabavam por cair em *regressão linear múltipla*, assim, dado o pouco tempo decidir por mandar essa versão ao qual tenho maior conhecimento em busca de uma correção e orientação para fazer as alterações necessárias.

Bibliotecas a serem usadas:

Pandas - criar e importar dados

Numpy - Fazer operações com vetores

Matplotlib - visualização de dados

Sklearn - Responsável por construir algoritmos
"""

# Importando bibliotecas

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

"""Já que não temos dados reais teremos que criar um dataset com valores gerados aleatoriamente."""

# Definindo semente
np.random.seed(369)

"""Dataset com as seguintes colunas:

- Área do lote (em pés quadrados)
- Ano de construção da casa
- Área do primeiro andar (em pés quadrados)
- Área do segundo andar (em pés quadrados)
- Número de banheiros completos
- Número de quartos
- Preço de venda da casa (em reais)

"""

# Gerando dados para simulação
n_amostras = 152
area_lote = np.random.uniform(500, 10000, n_amostras)  # em pés quadrados
ano_construcao = np.random.randint(1980, 2025, n_amostras)
area_primeiro_andar = np.random.uniform(600, 2000, n_amostras)
area_segundo_andar = np.random.uniform(0, 1800, n_amostras)  # algumas casas não têm 2º andar
num_banheiros = np.random.randint(1, 4, n_amostras)
num_quartos = np.random.randint(1, 6, n_amostras)
num_comodos = num_quartos + np.random.randint(1, 4, n_amostras)  # soma de quartos e outras áreas

"""A fórmula foi feita com base em intuições simples do mercado imobiliário: casas maiores, com mais quartos e mais banheiros, tendem a valer mais. Casas muito antigas tendem a valer menos.
Dessa forma foi adicionado pesos diferentes a depender do nível de importância de cada característica.
"""

preco_venda = (
    1000 * area_lote +
    2000 * area_primeiro_andar +
    1200 * area_segundo_andar +
    2000 * num_banheiros +
    4000 * num_quartos +
    5000 * num_comodos -
    250 * (2025 - ano_construcao) +
    np.random.normal(0, 20000, n_amostras)
)

"""Agora será criado o Dataframe onde cada linha representa uma casa e cada coluna mostra uma característica dessa casa."""

df = pd.DataFrame({
    'area_lote': area_lote,
    'ano_construcao': ano_construcao,
    'area_primeiro_andar': area_primeiro_andar,
    'area_segundo_andar': area_segundo_andar,
    'num_banheiros': num_banheiros,
    'num_quartos': num_quartos,
    'num_comodos': num_comodos,
    'preco_venda': preco_venda
})

"""Dando ínicio a regressão linear simples.

"""

df['area_total'] = df['area_primeiro_andar'] + df['area_segundo_andar']

X = df[['area_total']]
y = df[['preco_venda']]

"""Agora é criado o modelo de regressão linear.
Onde a primeira linha tenta encontrar uma fórmula matemática que consiga prever os valores com base nos dados de treinameito oferecidos.
Na segunda linha o modelo faz o estudo dos conjunto de dados X e y para tentar entender as relações entre eles.
"""

modelo = LinearRegression()
modelo.fit(X, y)

"""A partir daqui o modelo vai prever os preços das casas com base na área total.
Ele usa a fórmula que ele aprendeu com .fit() e gera uma lista de preços previstos.
"""

previsoes = modelo.predict(X)

"""Visualizando a relação entre área e preço

"""

# Desenho do gráfico
plt.figure(figsize=(10,5))
plt.scatter(df['area_total'], df['preco_venda'] / 1000, c='blue', label='Dados')
plt.plot(df['area_total'], previsoes / 1000, color='red', linestyle='--', label='Regressão Linear (simples)')

plt.xlabel('Área Total Casa (pés²)')
plt.ylabel('Preço de Venda (R$)')
plt.title('Relação entre Área e Preço')
plt.legend()
plt.show()