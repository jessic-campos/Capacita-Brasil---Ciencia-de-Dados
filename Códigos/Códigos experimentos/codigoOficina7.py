# -*- coding: utf-8 -*-
"""JessPy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vsMSJH6-g47j-EiArBs9aX9lzsVECQID

# Importação das bibliotecas
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

"""# Carregando e Pré-processando os Dados"""

# Carregando os três datasets
amazon = pd.read_csv('amazon_cells_labelled.txt', sep='\t', header=None, names=['text', 'label'])
yelp = pd.read_csv('yelp_labelled.txt', sep='\t', header=None, names=['text', 'label'])
imdb = pd.read_csv('imdb_labelled.txt', sep='\t', header=None, names=['text', 'label'])

# Concatenando todos os datasets
df = pd.concat([amazon, yelp, imdb], ignore_index=True)
print(df.head())

"""# Modelo e Construção do Pipeline"""

# Separando dados
X = df['text']
y = df['label']

# Dividindo em treino e teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Criando o pipeline
pipeline = Pipeline([
    ('tfidf', TfidfVectorizer(stop_words='english')),
    ('clf', MultinomialNB())
])

"""# Treinando o modelo"""

pipeline.fit(X_train, y_train)

"""# Avaliando os resultados"""

# Previsões
y_pred = pipeline.predict(X_test)

# Acurácia
acc = accuracy_score(y_test, y_pred)
print(f'Acurácia: {acc:.2f}')

# Relatório detalhado
print(classification_report(y_test, y_pred))

# Matriz de confusão
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Blues')
plt.xlabel("Predito")
plt.ylabel("Real")
plt.title("Matriz de Confusão")
plt.show()
